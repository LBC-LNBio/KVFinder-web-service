* parKVFinder web service

** Configuração local

O parKVFinder-webservice é formado por três módulos. O módulo web, o módulo de fila e o módulo de execução. Cada
módulo é executado em um container (docker) separado e integrados utilizando o docker-compose.

Logo, para executar o parkvfinder-webservice é necessário ter instalado o docker-compose. Em distribuições derivadas do Debian e Ubuntu, o comando para instalar será:

#+begin_example
$ sudo apt install docker-compose
#+end_example

O kvfinder é iniciado utilizando o comando abaixo na raiz do diretório desse repositório (onde está localizado o arquivo docker-compose.yml).

#+begin_src
$ docker-compose up
#+end_src

ou 

#+begin_src
$ docker-compose up -d
#+end_src

para executar em segundo plano.

Os comandos abaixo interrompem a execução do kvfinder-ws.

#+begin_src
$ docker-compose down
#+end_src

ou 

#+begin_src
$ docker-compose down --volumes
#+end_src

para destruir os "volumes" que armazem os dados das filas e as pastas com os arquivos dos _jobs_.

Em execução o servidor web estará disponível em:

    http://localhost:8081/

E informações da fila poderão ser visualizadas em:

    http://localhost:8023/info

** API

*** Criar um job

`http://localhost:8081/create`

Método: `POST`  Media type: `application/json`

TODO: Descrever os campos do json de input...


*** Solicitar os resultados de um job

`http://localhost:8081/{id}`

Método: `GET`

Onde `{id}` é o __id__ recebido durante a submissão do _job_.

TODO: Descrever o json de output e exemplificar em diferentes estados de execução...

# ** Cliente integrado ao PyMOL: PyMOL KVFinder-web Tools

# O cliente PyMOL KVFinder-web Tools está disponível em `client/PyMOL-KVFinder-web-Tools`.

# Para mais informações, use o guia disponível [aqui](https://github.com/jvsguerra/kvfinder-ws/blob/master/client/PyMOL-KVFinder-web-tools/README.md)


** Observações

Após alterações nos códigos-fonte o sistema precisa ser recompilado com 

#+begin_src
$ docker-compose up --build
#+end_src

Para iniciar mais de um _worker_ e assim tornar o sistema capaz de executar
mais de 1 _job_ simultaneamente (exemplo com 2 _workers_). __Precisa de mais testes__.

#+begin_src
$ docker-compose up --scale kv-worker=2
#+end_src

Por ainda ser um sistema em fase de testes o tempo de _timeout_ de um _job_ está em __12 minutos__ e o tempo que esse _job_ permanece disponível ("_expires_after_") está em __6 minutos__. Em produção o _job_ deverá permanecer disponível por algo como __1 dia__.  
